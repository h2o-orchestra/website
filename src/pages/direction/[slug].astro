---
import Layout from '../../layouts/Layout.astro';
import {contentfulClient, type Chef, allChef, nextConcerts} from "../../lib/contentful";
import { documentToHtmlString } from "@contentful/rich-text-html-renderer";

export async function getStaticPaths() {
    // Find the current conductor first
    const currentConductorItem = allChef.items.find(chef => chef.fields.courant);
    let currentConductor = null;
    
    if (currentConductorItem) {
        const portraitUrl = currentConductorItem.fields.portrait?.sys?.id 
            ? (await contentfulClient.getAsset(currentConductorItem.fields.portrait.sys.id)).fields.file?.url
            : undefined;
            
        currentConductor = {
            name: currentConductorItem.fields.name,
            resume: documentToHtmlString(currentConductorItem.fields.resume),
            description: documentToHtmlString(currentConductorItem.fields.description),
            portrait: portraitUrl,
            isCurrent: true,
            slug: 'current'
        };
    }

    // Create a path for each chef
    const paths = await Promise.all(allChef.items.map(async (chef) => {
        const portraitUrl = chef.fields.portrait?.sys?.id 
            ? (await contentfulClient.getAsset(chef.fields.portrait.sys.id)).fields.file?.url
            : undefined;
            
        return {
            params: { 
                slug: chef.fields.courant ? 'current' : chef.fields.name.toLowerCase().replace(/\s+/g, '-') 
            },
            props: { 
                chef: {
                    name: chef.fields.name,
                    resume: documentToHtmlString(chef.fields.resume),
                    description: documentToHtmlString(chef.fields.description),
                    portrait: portraitUrl,
                    isCurrent: chef.fields.courant
                },
                currentConductor
            }
        };
    }));
    
    return paths;
}

const { chef, currentConductor } = Astro.props;
---

<Layout title={`${chef.name} - Direction Musicale`} activeNav="direction">
    <!-- Hero Section with Conductor Portrait -->
    <div class="bg-gradient-to-tr from-pumpkin-300 to-pumpkin-500 py-16 md:py-24">
        
        <div class="container mx-auto px-4 relative z-10">
            <div class="flex flex-col md:flex-row items-center gap-10">
                <!-- Conductor portrait -->
                <div class="md:w-1/3 mb-8 md:mb-0">
                    {chef.portrait ? (
                        <img 
                            src={chef.portrait} 
                            alt={`${chef.name} - Chef d'orchestre`} 
                            class="w-full max-w-md mx-auto rounded-xl shadow-xl object-cover aspect-[3/4]"
                        />
                    ) : (
                        <div class="w-full max-w-md mx-auto rounded-xl bg-gray-200 aspect-[3/4] flex items-center justify-center">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-24 w-24 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                            </svg>
                        </div>
                    )}
                </div>
                
                <!-- Conductor info -->
                <div class="md:w-2/3 text-white">
                    {chef.isCurrent && (
                        <div class="inline-block px-3 py-1 bg-pumpkin-500 text-white text-sm font-medium rounded-full mb-4">
                            Chef actuel
                        </div>
                    )}
                    <h1 class="text-4xl md:text-5xl font-bold mb-6">{chef.name}</h1>
                    <div class="prose prose-lg prose-invert max-w-none">
                        <div set:html={chef.resume}></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Detailed biography -->
    <section class="py-16 bg-white">
        <div class="container mx-auto px-4">
            <div class="max-w-4xl mx-auto">
                <h2 class="text-3xl font-bold text-gray-900 mb-8">Biographie</h2>
                <div class="prose prose-lg prose-h3:text-h2o-blue prose-h3:font-semibold max-w-none">
                    <div set:html={chef.description}></div>
                </div>
            </div>
        </div>
    </section>
    
    <!-- Previous conductors or related content -->
    <section class="py-16 bg-gray-50">
        <div class="container mx-auto px-4">
            <div class="max-w-4xl mx-auto">
                <h2 class="text-3xl font-bold text-gray-900 mb-8">
                    {chef.isCurrent ? 'Prochains concerts' : 'Direction actuelle'}
                </h2>
                
                {chef.isCurrent ? (
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                        {nextConcerts.slice(0, 3).map((concert) => {
                            // Extract plain text from HTML using regex
                            const plainText = concert.description.replace(/<[^>]*>/g, '');
                            const shortDescription = plainText.length > 100 ? plainText.substring(0, 100) + '...' : plainText;
                            
                            // Generate URL-friendly slug for the concert
                            const concertSlug = concert.title.toLowerCase()
                                .replace(/[^\w\s]/g, '') // Remove special characters
                                .replace(/\s+/g, '-')    // Replace spaces with hyphens
                                .replace(/-+/g, '-');    // Remove duplicate hyphens
                            
                            return (
                                <div class="bg-white p-6 rounded-xl shadow-md">
                                    <div class="text-sm text-pumpkin-500 font-medium mb-2">
                                        {concert.date.toLocaleDateString('fr-FR', {day: 'numeric', month: 'long', year: 'numeric'})}
                                    </div>
                                    <h3 class="text-xl font-semibold text-gray-900 mb-2">{concert.title}</h3>
                                    <p class="text-gray-700 mb-4">{shortDescription}</p>
                                    <a href={`/concert/${concertSlug}`} class="text-h2o-blue hover:underline font-medium">
                                        En savoir plus →
                                    </a>
                                </div>
                            );
                        })}
                        {nextConcerts.length === 0 && (
                            <div class="bg-white p-6 rounded-xl shadow-md">
                                <p class="text-gray-700">Aucun concert à venir n'est programmé pour le moment.</p>
                            </div>
                        )}
                    </div>
                ) : (
                    <div class="bg-white p-6 rounded-xl shadow-md flex flex-col md:flex-row gap-6">
                        {currentConductor ? (
                            <>
                                <div class="md:w-1/4">
                                    {currentConductor.portrait ? (
                                        <img 
                                            src={currentConductor.portrait} 
                                            alt={`${currentConductor.name} - Chef d'orchestre actuel`} 
                                            class="w-full rounded-lg object-cover aspect-[3/4]"
                                        />
                                    ) : (
                                        <div class="w-full rounded-lg bg-gray-200 aspect-[3/4] flex items-center justify-center">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                                            </svg>
                                        </div>
                                    )}
                                </div>
                                <div class="md:w-3/4">
                                    <h3 class="text-xl font-semibold text-gray-900 mb-2">Découvrez {currentConductor.name}, notre chef d'orchestre actuel</h3>
                                    <p class="text-gray-700 mb-4">
                                        {currentConductor.resume.replace(/<[^>]*>/g, '').substring(0, 300)}...
                                    </p>
                                    <a href="/direction/current" class="text-h2o-blue hover:underline font-medium">
                                        En savoir plus →
                                    </a>
                                </div>
                            </>
                        ) : (
                            <div class="w-full text-center py-4">
                                <p class="text-gray-700">Aucun chef d'orchestre actuel n'est désigné pour le moment.</p>
                            </div>
                        )}
                    </div>
                )}
            </div>
        </div>
    </section>
</Layout>
