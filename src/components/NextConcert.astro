---
interface Props {
    title?: string;
    description?: string;
    date?: Date;
    price?: number;
    poster?: string; // Optional poster image URL
    location?: {
        lat: number;
        lon: number;
    };
    currentSeason?: string;
}

const { 
    title, 
    description, 
    date, 
    price, 
    location, 
    poster,
    currentSeason
} = Astro.props;

const hasConcert = Boolean(title && description && date && (price ?? 0) > 0);

// Format date if available
let formattedDate = '';
if (date) {
    const dateFormatter = new Intl.DateTimeFormat('fr-FR', {
        weekday: 'long',
        day: 'numeric',
        month: 'long',
        year: 'numeric',
        hour: '2-digit',
        minute: '2-digit'
    });
    formattedDate = dateFormatter.format(date);
}

// Use placeholder image if no poster is defined
const backgroundImage = poster ? poster : '/placeholder.png';
---

<div class="relative p-6 md:p-8 rounded-2xl shadow-md overflow-hidden">
    <!-- Background poster image with overlay -->
    <div class="absolute inset-0 z-0">
        <img src={backgroundImage} alt="Concert poster" class="w-full h-full object-cover opacity-40" />
    </div>
    
    <!-- Content (with relative positioning to appear above the background) -->
    <div class="relative z-10">
        <div class="flex items-center justify-between mb-4">
            {hasConcert && date && (
                <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-pumpkin-100 text-pumpkin-800">
                    {new Date() > date ? "Passé" : "À venir"}
                </span>
            )}
        </div>
        
        {hasConcert ? (
            <>
                <h3 class="text-xl font-medium text-pumpkin-600 mb-3">{title}</h3>
                
                <div class="space-y-4 mb-6">
                    <div class="flex items-start gap-3">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-pumpkin-500 mt-0.5" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd" />
                        </svg>
                        <span class="text-gray-700">{formattedDate}</span>
                    </div>
                    
                    {location && (
                        <div class="flex items-start gap-3">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-pumpkin-500 mt-0.5" viewBox="0 0 20 20" fill="currentColor">
                                <path fill-rule="evenodd" d="M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z" clip-rule="evenodd" />
                            </svg>
                            <span class="text-gray-700">Paris, France</span>
                        </div>
                    )}
                    
                    <div class="flex items-start gap-3">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-pumpkin-500 mt-0.5" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-14a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V4z" clip-rule="evenodd" />
                        </svg>
                        <span class="text-gray-700">Durée: 2h environ</span>
                    </div>
                    
                    <div class="flex items-start gap-3">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-pumpkin-500 mt-0.5" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M17.707 9.293a1 1 0 010 1.414l-7 7a1 1 0 01-1.414 0l-7-7A.997.997 0 012 10V5a3 3 0 013-3h5c.256 0 .512.098.707.293l7 7zM5 6a1 1 0 100-2 1 1 0 000 2z" clip-rule="evenodd" />
                        </svg>
                        <span class="text-gray-700">Prix: {price}€</span>
                    </div>
                </div>
                
                <div class="prose prose-sm prose-slate max-w-none mb-6">
                    <p>{description}</p>
                </div>
                
                <div class="flex flex-wrap gap-3 mt-4">
                    <a href={`/concert/${title.toLowerCase().replace(/\s+/g, '-')}`} class="inline-block bg-pumpkin-500 text-white font-medium py-2 px-4 rounded-lg hover:bg-pumpkin-600 transition-colors">
                        En savoir plus
                    </a>
                    <a href="#" class="inline-block bg-pumpkin-500 text-white font-medium py-2 px-4 rounded-lg hover:bg-pumpkin-600 transition-colors">
                        Réserver
                    </a>
                </div>
            </>
        ) : (
            <div class="text-center py-8"> 
                <h3 class="text-xl font-medium text-gray-800 mb-3">Programmation à venir</h3>
                <p class="text-gray-600 mb-6">Notre programmation pour la prochaine saison sera disponible bientôt. Restez à l'écoute !</p>
                <a href={`saison/${currentSeason}`} class="inline-block bg-pumpkin-500 text-gray-800 font-medium py-2 px-4 rounded-lg hover:bg-pumpkin-600 transition-colors">
                    Voir notre saison actuelle
                </a>
            </div>
        )}
    </div>
</div>